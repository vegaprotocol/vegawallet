name: Release binaries

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release-linux:
    name: Release on Linux ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    env:
      GOARCH: ${{ matrix.arch }}
      CGO_ENABLED: 0
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Run tests
        if: ${{ env.GOARCH == 'amd64' }}
        run: go test -v ./...

      - name: Build binary
        run: |
          hash=$(echo ${{ github.sha }} | cut -b1-8)
          go build -o build/vegawallet \
            -ldflags "\
              -X code.vegaprotocol.io/vegawallet/version.Version=${{ github.ref_name }} \
              -X code.vegaprotocol.io/vegawallet/version.VersionHash=$hash
            "

      - name: Bundle binary in archive
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          directory: build
          filename: vegawallet-${{ env.GOOS }}-${{ env.GOARCH }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    name: Release on MacOS ${{ matrix.arch }}
    runs-on: macos-latest
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    env:
      GOARCH: ${{ matrix.arch }}
      CGO_ENABLED: 0
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2

        with:
          go-version: 1.17
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Run tests
        if: ${{ env.GOARCH == 'amd64' }}
        run: go test -v ./...

      - name: Build binary
        run: |
          hash=$(echo ${{ github.sha }} | cut -b1-8)
          go build -o build/vegawallet \
            -ldflags "\
              -X code.vegaprotocol.io/vegawallet/version.Version=${{ github.ref_name }} \
              -X code.vegaprotocol.io/vegawallet/version.VersionHash=$hash
            "

      - name: Import DeveloperID Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          create-keychain: true
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_CERTIFICATE_PASS }}

      - name: Sign binary
        # --timestamp
        #     During signing, requests that a timestamp authority server be contacted to authenticate the time of
        #     signing.
        # --deep
        #     When signing a bundle, specifies that nested code content such as helpers, frameworks, and plug-ins,
        #     should be recursively signed in turn.
        # --options runtime
        #     On macOS versions >= 10.14.0, opts signed processes into a hardened runtime environment which includes
        #     runtime code signing enforcement, library validation, hard, kill, and debugging restrictions.
        run: codesign --verbose --sign "${{ secrets.MACOS_CERTIFICATE_IDENTITY_ID }}" --timestamp --options runtime --deep --force ./build/vegawallet

      - name: Verify signature
        run: codesign --verbose --verify --strict --deep ./build/vegawallet

      - name: Bundle binary in archive
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          directory: build
          filename: vegawallet-${{ env.GOOS }}-${{ env.GOARCH }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    name: Release on Windows ${{ matrix.arch }}
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    env:
      GOARCH: ${{ matrix.arch }}
      CGO_ENABLED: 0
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Run tests
        if: ${{ env.GOARCH == 'amd64' }}
        run: go test -v ./...

      - name: Build binary
        run: |
          $hash= "${{ github.sha }}".substring(0,8)
          go build -o build/vegawallet.exe `
            -ldflags " `
              -X code.vegaprotocol.io/vegawallet/version.Version=${{ github.ref_name }} `
              -X code.vegaprotocol.io/vegawallet/version.VersionHash=$hash `
            "

      - name: "Sign binary"
        uses: Dana-Prajea/code-sign-action@98c79121b376beab8d6a9484f445089db4461bca
        with:
          certificate: ${{ secrets.WINDOWS_CERTIFICATE }}
          password: ${{ secrets.WINDOWS_CERTIFICATE_PASS }}
          certificatesha1: ${{ secrets.WINDOWS_CERTIFICATE_HASH }}
          folder: "build"
          timestampUrl: "http://timestamp.comodoca.com/authenticode"

      - name: Bundle binary in archive
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          directory: build
          filename: vegawallet-${{ env.GOOS }}-${{ env.GOARCH }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
