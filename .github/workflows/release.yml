name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release-linux-adm64:
    name: Linux release - AMD64
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go ^1.16
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Tests
        run: go test -v ./...

      - name: Set release version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: make release-linux-amd64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # No testing because we are cross-compiling, and cross-platform testing
  # doesn't work.
  release-linux-arm64:
    name: Linux release - ARM64
    runs-on: ubuntu-latest
    env:
      GOARCH: arm64
    steps:
      - name: Set up Go ^1.16
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Set release version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: make release-linux-arm64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos-amd64:
    name: MacOS release - AMD64
    runs-on: macos-latest
    steps:
      - name: Set up Go ^1.16
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Tests
        run: go test -v ./...

      - name: Set release version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: make release-macos-amd64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # No testing because we are cross-compiling, and cross-platform testing
  # doesn't work.
  release-macos-arm64:
    name: MacOS release - ARM64 (no testing)
    runs-on: macos-latest
    env:
      GOARCH: arm64
    steps:
      - name: Set up Go ^1.16
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Set release version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: make release-macos-arm64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows-amd64:
    name: Windows release - AMD64
    runs-on: windows-latest
    steps:
      - name: Set up Go ^1.16
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Tests
        run: go test -v ./...

      - name: Set release version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: make release-windows-amd64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
